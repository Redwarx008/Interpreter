// <auto-generated/>
using System;
//using System.Collections.Generic;
using Interpreter;
namespace LoxGenerated1
{
    public abstract class Expr
    {

        internal interface Visitor<R>
        {

            R VisitBinaryExpr(Binary expr);

            R VisitGroupingExpr(Grouping expr);

            R VisitLiteralExpr(Literal expr);

            R VisitUnaryExpr(Unary expr);

        }

        internal class Binary : Expr
        {
            // Constructor.
            public Binary(Expr left, Token loxOperator, Expr right)
            {

                _left = left;

                _loxOperator = loxOperator;

                _right = right;

            }

            internal override R Accept<R>(Visitor<R> visitor)
            {
                return visitor.VisitBinaryExpr(this);
            }

            private Expr _left;

            private Token _loxOperator;

            private Expr _right;

        }

        internal class Grouping : Expr
        {
            // Constructor.
            public Grouping(Expr expression)
            {

                _expression = expression;

            }

            internal override R Accept<R>(Visitor<R> visitor)
            {
                return visitor.VisitGroupingExpr(this);
            }

            private Expr _expression;

        }

        internal class Literal : Expr
        {
            // Constructor.
            public Literal(Object value)
            {

                _value = value;

            }

            internal override R Accept<R>(Visitor<R> visitor)
            {
                return visitor.VisitLiteralExpr(this);
            }

            private Object _value;

        }

        internal class Unary : Expr
        {
            // Constructor.
            public Unary(Token loxOperator, Expr right)
            {

                _loxOperator = loxOperator;

                _right = right;

            }

            internal override R Accept<R>(Visitor<R> visitor)
            {
                return visitor.VisitUnaryExpr(this);
            }

            private Token _loxOperator;

            private Expr _right;

        }

        internal abstract R Accept<R>(Visitor<R> visitor);
    }
}
